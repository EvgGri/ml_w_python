# =-=-=-=-=-=-=-=-=-=-=- Некоторые полезные операции -=-=-=-=-=-=-=-=-=-=-=-=-=
# Ниже перечислены некоторые вспомогательные операции, включенные в Keras API. Их цель – упростить создание сетей, процесс обучения
# и сохранение промежуточных результатов.

# =-=-=-=-=-=-=-=-=-=-=- Сохранение и загрузка весов и архитектуры модели
# Для сохранения и загрузки архитектуры модели служат следующие функции:

# сохранить в формате JSON
json_string = model.to_json()
# сохранить в формате YAML
yaml_string = model.to_yaml()
# восстановить модель из JSON-файла from keras.models import model_from_json model = model_from_json(json_string)
# восстановить модель из YAML-файла model = model_from_yaml(yaml_string)

# Для сохранения и загрузки параметров модели служат следующие функции:
from keras.models import load_model
# создать HDF5-файл 'my_model.h5'
model.save('my_model.h5')
# удалить существующую модель
del model
# вернуть откомпилированную модель, идентичную исходной
model = load_model('my_model.h5')

# =-=-=-=-=-=-=-=-=-=-=- Обратные вызовы для управления процессом обучения
# Процесс обучения можно остановить, когда показатель качества перестает улучшаться. Для этого служит следующая функция обратного вызова:
