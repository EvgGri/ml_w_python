# AdaBoost - адаптивный бустинг (adaptive boosting)

# В бустинге ансамбль состоит из простых классификаторов или слабых классификаторов, имеющих незначительно преимущество в качестве над
# случайным гаданием. Типичным примером слабого классификатора является одноуровневое дерево решений (пенек решения).
# Лежащая в основе бустинга ключевая идея заключается в том, что он сосредоточен на тренировочных образцах, которые трудно классифицировать,
# т.е. с целью улучшения качества ансамбля бустинг дает слабым ученикам в последствии обучиться на ошибочно классифицированных тренировочных
# образцах.

# В отличие от бэггинга, алгоритм бустинга использует случайные подможества тренировочных образцов, извлеченные из тренировочного набора данных
# без возврата. Таким образом алгоритм бустинга можно записать в 4-х основных шагах:

# 1. извлечь случайное подмножество тренировочных образцов d_1 без возврата из тренировочного набора D для тренировки слабого ученика С_1
# 2. извлечь второе случайное тренировочное подмножество d_2 без возврата из тренировочного набора и добавить 50% ранее ошибочно
# классифицированных образцов для тренировки слабого ученика С_2
# 3. найти в тренировочном наборе D тренировочные образцы d_3, по которым C_1 & C_2 расходятся, для тренировки третьего слабого ученика С_3
# 4. Объединить слабых учеников С_1, С_2, С_3 посредством мажоритарного голосования

# В отличие от описаной здесь процедуры бустинга, алгоритм AdaBoost для тренировки слабых учеников использует полный тренировочный набор, где
# тренировочные образцы взвешиваются повторно в каждой итерации с целью построения сильного классификатора, который обучается на ошибках
# предыдущих слабых классификаторов в ансамбле.
